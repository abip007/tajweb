@model WebApplication2.Models.BillRegister
@using WebApplication2.Models
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>BillRegister</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BillID)

        <div class="form-group">
            @Html.LabelFor(model => model.BillDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BillDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.memberId, "memberId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("memberId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.memberId, "", new { @class = "text-danger" })
                <input type="text" value="@Model.MemeberCompanyInfo.Organization_Name" readonly="readonly"  id="txt"/>
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.MemeberCompanyInfo.Organization_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.memberId)
                @Html.EditorFor(model => model.MemeberCompanyInfo.Organization_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemeberCompanyInfo.Organization_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.paid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.paid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.paid, "", new { @class = "text-danger" })
            </div>
        </div>
                <div class="form-group">
                    <label for="orgTrade" class="control-label col-md-2">Income Head</label>
                    <div class="col-md-10">
                        @Html.DropDownList("HeaderId", null, htmlAttributes: new { @class = "form-control" })


                    </div>
                </div>
                <div>
                    <div class="form-group">
                        <label for="orgTrade" class="control-label col-md-2">Amount</label>
                        <div class="col-md-10">
                            <input type="text" id="amt" name="amt" value="0" class="form-control" />
                            <span class="error">Please Enter Amount</span>

                        </div>
                    </div>
                    <div>

                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" id="add" value="add" class="success" />
                        </div>
                    </div>

                    <table class="table" id="billdetail">
                        <tr>
                            <th>
                                Header
                            </th>
                            <th>
                                Amount
                            </th>
                            <th></th>
                        </tr>
                        @{
                            var BillDetail = (List<Billdetail>)ViewBag.BillDetail;
                        }
                        @foreach (var item in BillDetail)
                {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Header.HeaderName)
                                </td>
                                <td>
                                    @Html.TextBoxFor(modelItem => item.Amount, new { @id = "amount" + item.lineId, @class = "amount" })
                                    <div id="upd"></div>
                                </td>

                                <td>
                                    @Html.ActionLink("DeleteLine", "DeleteLine", new { id = item.lineId })
                                    
                                </td>
                            </tr>
                        }

                    </table>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
            <script>
                $(document).ready(function () {
                    //Price Change
                    $(".amount").change(function () {
                        var amount = this.value;
                        alert(amount);
                        var id = $(this).attr("id");
                        var lineidd = id.replace('amount', '');
                        //var soid = $('#SoId').val();
                        $.post("/BillRegisters/updateAmount",
                            {
                                lineid: lineidd,
                                amount: amount
                            },
                            function (data) {
                                $('#upd').text('Updated..');

                            });
                        //alert();

                    });
                    $('#add').click(function () {
                        //Check validation of order item

                        var isValidItem = true;
                        if (!($('#amt').val().trim() != '' && !isNaN($('#amt').val().trim()) && (parseInt($('#amt').val()) || 0))) {
                            isValidItem = false;
                            $('#amt').siblings('span.error').css('visibility', 'visible');
                        }
                        else {
                            $('#amt').siblings('span.error').css('visibility', 'hidden');
                        }




                        if (isValidItem) {
                           
                            var data = {
                                HeaderId: $('#HeaderId').val().trim(),
                                HeaderText: $('#HeaderId :selected').text().trim(),
                                Amount: parseFloat($('#amt').val().trim()),
                                BillID: $('#BillID').val().trim()
                                
                            }
                            $(this).val('Please wait...');
                            $.ajax({
                                url: '/BillRegisters/AddLinetoBill',
                                type: "POST",
                                data: JSON.stringify(data),
                                dataType: "JSON",
                                contentType: "application/json",
                                success: function (d) {
                                    //check is successfully save to database
                                    if (d.status == true) {
                                        //will send status from server side
                                        alert('Successfully done.');
                                        //clear form
                                        
                                        $('#billdetail tr:last').after('<tr><td>' + $('#HeaderId :selected').text().trim() + '</td><td><input type=text id=amount' + d.lineid + ' value=' + d.amount + ' ><td><td><a href=#>Delete</a></td></tr>');
                                        $('#submit').val('Save');
                                    }
                                    else {
                                        alert('Failed');
                                    }
                                    $('#submit').val('Save');
                                },
                                error: function () {
                                    alert('Error. Please try again.');
                                    $('#submit').val('Save');
                                }
                            });
                        }
                        
                    });
                })
            </script>
